<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>